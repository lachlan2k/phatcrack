name: Docker Build & Publish API and Frontend

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  API_IMAGE_NAME: ${{ github.repository }}/api
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/frontend
  AGENT_SERVER_IMAGE_NAME: ${{ github.repository }}/agent-server


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: 'v2.2.2'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@1583c0f09d26c58c59d25b0eef29792b7ce99d9a

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #####
      ### API
      #####
      - name: Extract Docker API metadata
        id: meta-api
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}

      - name: Build and push API Docker image
        id: build-and-push-api
        uses: docker/build-push-action@ccc2b40e9ea6518f9252a22a990f8e868370f62e
        with:
          context: .
          file: Dockerfile.api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published API Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-api.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-api.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

        
      #####
      ### Frontend
      #####
      - name: Extract Docker frontend metadata
        id: meta-frontend
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}

      - name: Build and push frontend Docker image
        id: build-and-push-frontend
        uses: docker/build-push-action@ccc2b40e9ea6518f9252a22a990f8e868370f62e
        with:
          context: .
          file: Dockerfile.frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published frontend Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-frontend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-frontend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}


      #####
      ### Agent Server
      #####
      - name: Extract Docker agent server metadata
        id: meta-agent
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.AGENT_SERVER_IMAGE_NAME }}

      - name: Build and push agent server Docker image
        id: build-and-push-agent
        uses: docker/build-push-action@ccc2b40e9ea6518f9252a22a990f8e868370f62e
        with:
          context: .
          file: Dockerfile.agent
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-agent.outputs.tags }}
          labels: ${{ steps.meta-agent.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published agent Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-agent.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-agent.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
